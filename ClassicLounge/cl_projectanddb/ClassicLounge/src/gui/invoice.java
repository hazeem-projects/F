/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Color;
import java.io.InputStream;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.DBConnection;
import model.Invoice_Items;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;
/**
 *
 * @author ADMIN
 */
public class invoice extends javax.swing.JFrame {

    /**
     * Creates new form invoice
     */
    DecimalFormat df = new DecimalFormat("0.00");

    public invoice() {
        initComponents();

        jTextField4.grabFocus();
        loadProducts();

    }
    String description;
    String price;

    public void loadProducts() {

//        try{
//            
//            ResultSet rs = DBConnection.search("SELECT * FROM `products`;");
//            
//            Vector v = new Vector();
//            v.add("Select");
//            
//            while(rs.next()){
//                v.add(rs.getString("name"));
//            }
//            
//            DefaultComboBoxModel dcm = new DefaultComboBoxModel(v);
//            jComboBox1.setModel(dcm);
//            
//        }catch(Exception e){
//            e.printStackTrace();
//        }
//        
    }

//    public void loadPaymentTypes(){
//        
//        try{
//            
//            ResultSet rs = DBConnection.search("SELECT * FROM `payment_type`;");
//            
//            Vector v = new Vector();
//            v.add("Select");
//            
//            while(rs.next()){
//                v.add(rs.getString("name"));
//            }
//            
//            DefaultComboBoxModel dcm = new DefaultComboBoxModel(v);
//            jComboBox2.setModel(dcm);
//            
//        }catch(Exception e){
//            e.printStackTrace();
//        }
//        
//    }
    public void fullTotal() {

        double total = 0;

        for (int i = 0; i < jTable1.getRowCount(); i++) {
            String t = jTable1.getValueAt(i, 4).toString();
            total = total + Double.parseDouble(t);
        }

        jLabel7.setText(df.format(total));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Classic Lounge - Invoice");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 55)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 153));
        jLabel1.setText("Invoice");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 21)); // NOI18N
        jLabel2.setText("Product Name :");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 21)); // NOI18N
        jLabel3.setText("Product Price :");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel4.setText("0.0");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 21)); // NOI18N
        jLabel5.setText("Quantity :");

        jTextField1.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 204, 204));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 28)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Add To Invoice Table");
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setOpaque(true);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Name", "Price", "Quantity", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 21)); // NOI18N
        jLabel6.setText("Total Payment :");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel7.setText("0.00");

        jTextField2.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 21)); // NOI18N
        jLabel9.setText("Payment :");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 21)); // NOI18N
        jLabel10.setText("Balance :");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel11.setText("0.00");

        jButton2.setBackground(new java.awt.Color(0, 204, 153));
        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 34)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Print Invoice");
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.setOpaque(true);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/invoice2(2).png"))); // NOI18N

        jTextField3.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 21)); // NOI18N
        jLabel13.setText("Item code :");

        jTextField4.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField4KeyPressed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(204, 153, 0));
        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 25)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Back");
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.setOpaque(true);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("jButton4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(43, 43, 43)
                                        .addComponent(jLabel10)
                                        .addGap(39, 39, 39)
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton4)
                                        .addGap(31, 31, 31)))
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(37, 37, 37)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(37, 37, 37)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addGap(146, 146, 146))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton3)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(105, 105, 105)
                                .addComponent(jLabel12)
                                .addGap(81, 81, 81))
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(43, 43, 43))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3)
                            .addComponent(jLabel12))))
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jButton4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))))
                .addGap(52, 52, 52))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
        String qty = jTextField1.getText();
        String text = qty + evt.getKeyChar();

        if (!Pattern.compile("[1-9][0-9]*").matcher(text).matches()) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jTextField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyReleased
        // TODO add your handling code here:
        if (jTextField2.getText().isEmpty()) {
            jLabel11.setText("0.00");
            jLabel11.setForeground(Color.BLACK);
        } else {

            String total = jLabel7.getText();
            String payment = jTextField2.getText();

            double balance = Double.parseDouble(payment) - Double.parseDouble(total);

            if (balance < 0) {
                jLabel11.setForeground(Color.RED);
            } else {
                jLabel11.setForeground(Color.GREEN);
            }

            jLabel11.setText(df.format(balance));

        }
    }//GEN-LAST:event_jTextField2KeyReleased

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
        // TODO add your handling code here:
        String payment = jTextField2.getText();
        String text = payment + evt.getKeyChar();

        if (!Pattern.compile("(0|0[.]|0[.][0-9]*)|[1-9]|[1-9][0-9]*|[1-9][0-9]*[.]?[0-9]*").matcher(text).matches()) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField2KeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

//        
//        String pid = jTextField4.getText();
//        String name = jTextField3.getText();
//        String price = jLabel4.getText();
//        String qty = jTextField1.getText();
//
//        if(pid.isEmpty()) {
//            JOptionPane.showMessageDialog(this, "Please enter the Item Code!!!", "Warning", JOptionPane.WARNING_MESSAGE);
//        } else if (qty.isEmpty()) {
//            JOptionPane.showMessageDialog(this, "Please enter Quantity!!!", "Warning", JOptionPane.WARNING_MESSAGE);
//        } else if (!Pattern.compile("[1-9][0-9]*").matcher(qty).matches()) {
//            JOptionPane.showMessageDialog(this, "Invalid Quantity!!!", "Warning", JOptionPane.WARNING_MESSAGE);
//        } else {
//
//            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
//
//            boolean isFound = false;
//            int x = -1;
//
//            for (int i = 0; i < dtm.getRowCount(); i++) {
//                String id = jTable1.getValueAt(i, 0).toString();
//
//                if (pid.equals(id)) {
//                    isFound = true;
//                    x = i;
//                    break;
//                }
//            }
//
//            if (isFound) {
//
//                int option = JOptionPane.showConfirmDialog(this, "This Product is already Added. Do you want to Update?", "Confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
//
//                if (option == JOptionPane.YES_OPTION) {
//
//                    int oldQty = Integer.parseInt(jTable1.getValueAt(x, 3).toString());
//                    int fullQty = oldQty + Integer.parseInt(qty);
//
//                    jTable1.setValueAt(String.valueOf(fullQty), x, 3);
//                    jTable1.setValueAt(price, x, 2);
//
//                    double updatedItemTotal = Double.parseDouble(price) * fullQty;
//                    jTable1.setValueAt(String.valueOf(updatedItemTotal), x, 4);
//
//                    fullTotal();
//
//                }
//
//                jTextField4.setText("");
//                jTextField3.setText("");
//                jLabel4.setText("0.0");
//                jTextField1.setText("");
//
//            } else {
//
//                Vector v = new Vector();
//                v.add(pid);
//                v.add(name);
//                v.add(price);
//                v.add(qty);
//
//                double itemtotal = Integer.parseInt(qty) * Double.parseDouble(price);
//                v.add(df.format(itemtotal));
//
//                dtm.addRow(v);
//
//                fullTotal();
//
//                jTextField4.setText("");
//                jTextField3.setText("");
//                jLabel4.setText("0.0");
//                jTextField1.setText("");
//
//                JOptionPane.showMessageDialog(this, "Product Added to the Invoice Successfully!!!", "Success", JOptionPane.INFORMATION_MESSAGE);
//
//            }
//
//        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {

            int r = jTable1.getSelectedRow();

            if (r == -1) {
                JOptionPane.showMessageDialog(this, "Please select a Invoice Item!!!", "Warning", JOptionPane.WARNING_MESSAGE);
            } else {

                int option = JOptionPane.showConfirmDialog(this, "Do you want to Remove this Invoice Item?", "Confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);

                if (option == JOptionPane.YES_OPTION) {

                    DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                    dtm.removeRow(r);

                    fullTotal();

                    jTextField4.setText("");
                    jTextField3.setText("");
                    jLabel4.setText("0.0");
                    jTextField1.setText("");

                    JOptionPane.showMessageDialog(this, "Invoice Item Removed Successfully!!!", "Success", JOptionPane.INFORMATION_MESSAGE);

                }

            }

        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        String payment = jTextField2.getText();
        String balance = jLabel11.getText();

        if (jTable1.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Please add Products!!!", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (payment.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Payment!!!", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (!Pattern.compile("((0)|[1-9][0-9]*)|(([1-9][0-9]*)[.]([0]*[1-9][0-9]*))|([0][.]([0]*[1-9][0-9]*))").matcher(payment).matches()) {
            JOptionPane.showMessageDialog(this, "Invalid Payment!!!", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            try {

                //Invoice Insert
                long mTime = System.currentTimeMillis();

                String uniqueId = mTime + "-" + SignIn.userId;

                int userId = SignIn.userId;

                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                String dNow = sdf.format(new Date());

                DBConnection.iud("INSERT INTO `invoice`(`date_time`,`payment`,`balance`,`unique_id`) VALUES('" + dNow + "','" + payment + "','" + balance + "','" + uniqueId + "');");
                //Invoice Insert

                ResultSet rs = DBConnection.search("SELECT * FROM `invoice` WHERE `unique_id`='" + uniqueId + "'");
                rs.next();
                String invoice_id = rs.getString("id");

//                String filepath = "src//reports//cl_invoice.jrxml";

//                JasperReport jr = JasperCompileManager.compileReport(filepath);

//                HashMap parameters = new HashMap();

                Vector v = new Vector();

//                parameters.put("invoice_id", invoice_id);
//                parameters.put("date&time", dNow);

                for (int i = 0; i < jTable1.getRowCount(); i++) {

                    String pid = jTable1.getValueAt(i, 0).toString();
                    String qty = jTable1.getValueAt(i, 3).toString();
                    //invoice_id = id

                    DBConnection.iud("INSERT INTO `invoice_item`(`qty`,`products_id`,`invoice_id`) VALUES('" + qty + "','" + pid + "','" + invoice_id + "');");

                    String item = jTable1.getValueAt(i, 1).toString();
                    int quantity = Integer.parseInt(qty);
                    double price = Double.parseDouble(jTable1.getValueAt(i, 2).toString());
                    double amount = Double.parseDouble(jTable1.getValueAt(i, 4).toString());

                    v.add(new Invoice_Items(item, quantity, price, amount));

                }
                //Invoice Item Insert

                double full_total = Double.parseDouble(jLabel7.getText());
                double paid_payment = Double.parseDouble(payment);
                double balance_payment = Double.parseDouble(balance);

//                parameters.put("full_total", full_total);
//                parameters.put("payment", paid_payment);
//                parameters.put("balance", balance_payment);

//                JRTableModelDataSource dataSource = new JRTableModelDataSource(jTable1.getModel());
//                JRBeanCollectionDataSource datasource = new JRBeanCollectionDataSource(v);
//                JasperPrint jp = JasperFillManager.fillReport(jr, parameters, datasource);

                //Product
                jTextField4.setText("");
                jTextField3.setText("");
                jLabel4.setText("0.00");
                jTextField1.setText("");

                //Product
                //Table
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                dtm.setRowCount(0);
                //Table

                //payments
                jLabel7.setText("0.00");
                jTextField2.setText("");
                jLabel11.setText("0.00");
                //payments

                JOptionPane.showMessageDialog(this, "Invoice Created Successfully!!!", "Success", JOptionPane.INFORMATION_MESSAGE);

//                JasperViewer.viewReport(jp, false);

            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyPressed
        // TODO add your handling code here:
        String itemId = jTextField4.getText();

        if (evt.getKeyCode() == 40) {

            jTextField2.grabFocus();
        }

        if (evt.getKeyCode() == 10) {

//            if(itemId.isEmpty()){
//            
//            jTextField2.grabFocus();
//            
//            }
            try {
                ResultSet rs = DBConnection.search("Select * from products where id='" + Integer.parseInt(itemId) + "';");

                if (rs.next()) {
                    description = rs.getString("name");
                    price = rs.getString("price");

                    jTextField3.setText(description);
                    jLabel4.setText(price);

                    jTextField1.grabFocus();

                } else {
                    JOptionPane.showMessageDialog(this, "The Product is Not Found in this Item Code!!!", "Warning", JOptionPane.WARNING_MESSAGE);
                    jTextField3.setText("");
                    jLabel4.setText("");
                }

            } catch (Exception e) {
            }

        }
    }//GEN-LAST:event_jTextField4KeyPressed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // TODO add your handling code here:

        if (evt.getKeyCode() == 107) {

            String pid = jTextField4.getText();
            String name = jTextField3.getText();
            String price = jLabel4.getText();
            String qty = jTextField1.getText();

            if (pid.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter the Item Code!!!", "Warning", JOptionPane.WARNING_MESSAGE);
            } else if (qty.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter Quantity!!!", "Warning", JOptionPane.WARNING_MESSAGE);
            } else if (!Pattern.compile("[1-9][0-9]*").matcher(qty).matches()) {
                JOptionPane.showMessageDialog(this, "Invalid Quantity!!!", "Warning", JOptionPane.WARNING_MESSAGE);
            } else {

                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();

                boolean isFound = false;
                int x = -1;

                for (int i = 0; i < dtm.getRowCount(); i++) {
                    String id = jTable1.getValueAt(i, 0).toString();

                    if (pid.equals(id)) {
                        isFound = true;
                        x = i;
                        break;
                    }
                }

                if (isFound) {

                    int option = JOptionPane.showConfirmDialog(this, "This Product is already Added. Do you want to Update?", "Confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);

                    if (option == JOptionPane.YES_OPTION) {

                        int oldQty = Integer.parseInt(jTable1.getValueAt(x, 3).toString());
                        int fullQty = oldQty + Integer.parseInt(qty);

                        jTable1.setValueAt(String.valueOf(fullQty), x, 3);
                        jTable1.setValueAt(price, x, 2);

                        double updatedItemTotal = Double.parseDouble(price) * fullQty;
                        jTable1.setValueAt(String.valueOf(updatedItemTotal), x, 4);

                        fullTotal();

                    }

                    jTextField4.setText("");
                    jTextField3.setText("");
                    jLabel4.setText("0.0");
                    jTextField1.setText("");

                } else {

                    Vector v = new Vector();
                    v.add(pid);
                    v.add(name);
                    v.add(price);
                    v.add(qty);

                    double itemtotal = Integer.parseInt(qty) * Double.parseDouble(price);
                    v.add(df.format(itemtotal));

                    dtm.addRow(v);

                    fullTotal();

                    jTextField4.setText("");
                    jTextField3.setText("");
                    jLabel4.setText("0.0");
                    jTextField1.setText("");

                    JOptionPane.showMessageDialog(this, "Product Added to the Invoice Successfully!!!", "Success", JOptionPane.INFORMATION_MESSAGE);

                }

                jTextField4.grabFocus();
            }

        }


    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
        // TODO add your handling code here:

        if (evt.getKeyCode() == 38) {

            jTextField4.grabFocus();

        }

        if (evt.getKeyCode() == 10) {
            String payment = jTextField2.getText();
            String balance = jLabel11.getText();

            if (jTable1.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Please add Products!!!", "Warning", JOptionPane.WARNING_MESSAGE);
            } else if (payment.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter Payment!!!", "Warning", JOptionPane.WARNING_MESSAGE);
            } else if (!Pattern.compile("((0)|[1-9][0-9]*)|(([1-9][0-9]*)[.]([0]*[1-9][0-9]*))|([0][.]([0]*[1-9][0-9]*))").matcher(payment).matches()) {
                JOptionPane.showMessageDialog(this, "Invalid Payment!!!", "Warning", JOptionPane.WARNING_MESSAGE);
            } else {

                try {

                    //Invoice Insert
                    long mTime = System.currentTimeMillis();

                    String uniqueId = mTime + "-" + SignIn.userId;

                    int userId = SignIn.userId;

                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                    String dNow = sdf.format(new Date());

                    DBConnection.iud("INSERT INTO `invoice`(`date_time`,`payment`,`balance`,`unique_id`) VALUES('" + dNow + "','" + payment + "','" + balance + "','" + uniqueId + "');");
                    //Invoice Insert

                    ResultSet rs = DBConnection.search("SELECT * FROM `invoice` WHERE `unique_id`='" + uniqueId + "'");
                    rs.next();
                    String invoice_id = rs.getString("id");

                    String filepath = "src//reports//cl_invoice.jrxml";

                    JasperReport jr = JasperCompileManager.compileReport(filepath);

                    HashMap parameters = new HashMap();

                    Vector v = new Vector();

                    parameters.put("invoice_id", invoice_id);
                    parameters.put("date&time", dNow);

                    for (int i = 0; i < jTable1.getRowCount(); i++) {

                        String pid = jTable1.getValueAt(i, 0).toString();
                        String qty = jTable1.getValueAt(i, 3).toString();
                        //invoice_id = id

                        DBConnection.iud("INSERT INTO `invoice_item`(`qty`,`products_id`,`invoice_id`) VALUES('" + qty + "','" + pid + "','" + invoice_id + "');");

                        String item = jTable1.getValueAt(i, 1).toString();
                        int quantity = Integer.parseInt(qty);
                        double price = Double.parseDouble(jTable1.getValueAt(i, 2).toString());
                        double amount = Double.parseDouble(jTable1.getValueAt(i, 4).toString());

                        v.add(new Invoice_Items(item, quantity, price, amount));

                    }
                    //Invoice Item Insert

                    double full_total = Double.parseDouble(jLabel7.getText());
                    double paid_payment = Double.parseDouble(payment);
                    double balance_payment = Double.parseDouble(balance);

                    parameters.put("full_total", full_total);
                    parameters.put("payment", paid_payment);
                    parameters.put("balance", balance_payment);

//                JRTableModelDataSource dataSource = new JRTableModelDataSource(jTable1.getModel());
                    JRBeanCollectionDataSource datasource = new JRBeanCollectionDataSource(v);
                    JasperPrint jp = JasperFillManager.fillReport(jr, parameters, datasource);

                    //Product
                    jTextField4.setText("");
                    jTextField3.setText("");
                    jLabel4.setText("0.00");
                    jTextField1.setText("");

                    //Product
                    //Table
                    DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                    dtm.setRowCount(0);
                    //Table

                    //payments
                    jLabel7.setText("0.00");
                    jTextField2.setText("");
                    jLabel11.setText("0.00");
                    //payments

                    JOptionPane.showMessageDialog(this, "Invoice Created Successfully!!!", "Success", JOptionPane.INFORMATION_MESSAGE);

                    JasperViewer.viewReport(jp, false);

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }


    }//GEN-LAST:event_jTextField2KeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        printInvoice();
        
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new invoice().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables

    private void printInvoice() {
        try {
            
            InputStream in = this.getClass().getClassLoader().getResourceAsStream("reports/cl_invoice.jrxml");
                            
//            String path = "C:\\Users\\ADMIN\\JaspersoftWorkspace\\MyReports\\cl_invoice.jrxml";
            
            Map<String, Object> m = new HashMap();
            m.put("invoiceid", "11");

            JasperReport cp = JasperCompileManager.compileReport(in);
            JasperPrint fr = JasperFillManager.fillReport(cp, m, model.DBCon.getConn());
//            JasperPrintManager.printReport(fr, false);
            JasperViewer.viewReport(fr, true);
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
